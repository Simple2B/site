# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Next.js app

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  DOCKER_LOGIN: simple2b
  IMAGE_REPO: simple2b/site-s2b-back

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: [1.2.2]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        working-directory: ./back_v2
        run: |
          poetry install
      - name: Lint with flake8
        working-directory: ./back_v2
        run: |
          poetry run flake8 . --count --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Run pytest
        working-directory: ./back_v2
        run: |
          poetry run pytest
  build:
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      needs: test
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: install packages
          working-directory: ./back_v2
          run: |
            poetry run pytest
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ env.DOCKER_LOGIN }}
            password: ${{ secrets.SITE_DOCKER_ACCESS_TOKEN }}
        - name: Build and Push image
          uses: docker/build-push-action@v4
          with:
            context: ./back_v2
            push: true
            platforms: linux/amd64,linux/arm64
            tags: ${{ env.IMAGE_REPO }}:latest
        - name: update compose file
          uses: appleboy/scp-action@v0.1.4
          with:
            host: ${{ secrets.PROD_HOST }}
            username: ${{ secrets.PROD_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            source: docker-compose.prod.yaml
            target: ~/site
        - name: deploy
          uses: appleboy/ssh-action@v0.1.10
          with:
            host: ${{ secrets.PROD_HOST }}
            username: ${{ secrets.PROD_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              cd ~/site &&
              mv docker-compose.prod.yaml docker-compose.yaml &&
              docker-compose pull &&
              docker-compose up -d &&
              docker system prune -f
