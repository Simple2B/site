# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Bult & Deploy

on:
  push:
    tags:
      - "v*"

env:
  DOCKER_LOGIN: simple2b
  IMAGE_BACK: simple2b/site-s2b-back
  IMAGE_FRONT: simple2b/site-s2b-front
  # DEPLOY_HOST: ${{ secrets.PROD_HOST }}
  # DEPLOY_USER_NAME: ${{ secrets.PROD_USERNAME }}
  # DEPLOY_SSH_KEY: ${{ secrets.SSH_KEY }}
  DEPLOY_HOST: ${{ secrets.DEVELOP_HOST }}
  DEPLOY_USER_NAME: ${{ secrets.DEVELOP_USERNAME }}
  DEPLOY_SSH_KEY: ${{ secrets.DEVELOP_SSH_KEY }}

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: [1.5.1]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        working-directory: ./back
        run: |
          poetry install
      - name: Lint with flake8
        working-directory: ./back
        run: |
          poetry run flake8 . --count --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Run pytest
        working-directory: ./back
        run: |
          poetry run pytest
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_LOGIN }}
          password: ${{ secrets.SITE_DOCKER_ACCESS_TOKEN }}
      - name: Build and Push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./back
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_BACK }}:latest
      - name: Build and Push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./front
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_FRONT }}:latest
      - name: update compose file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER_NAME }}
          key: ${{ env.DEPLOY_SSH_KEY }}
          source: docker-compose.dev.yaml
          target: ~/site_dev
      - name: deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER_NAME }}
          key: ${{ env.DEPLOY_SSH_KEY }}
          script: |
            cd ~/site_dev &&
            mv docker-compose.dev.yaml docker-compose.yaml &&
            docker-compose pull &&
            docker-compose up -d &&
            docker system prune -f
